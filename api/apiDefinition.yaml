openapi: 3.0.3
info:
  title: OpenSoundQueue API
  description: Documentation of all API endpoints
  version: 1.0.0
servers:
  - url: 'https://localhost:8080'
paths:
  /queue/page/{page-number}:
    get:
      tags:
        - public
      description: receive a page of the queue with default page size
      parameters:
        - in: path
          name: page-number
          schema:
            type: integer
            example: 2
          required: true
          description: Number of page
      responses:
        200:
          description: data of the requested page
          content:
            application/json:
              schema:
                example:
                  numberOfPages: 12
                  page:
                    - numberInQueue: 0
                      song:
                        artist: Giveon
                        duration: 200
                        title: For Tonight
                    - numberInQueue: 1
                      song:
                        artist: The Kid LAROI & Justin Bieber
                        duration: 69
                        title: Stay
                    - numberInQueue: 2
                      song:
                        artist: Lil Nas X & Jack Harlow
                        duration: 157
                        title: Industry Baby
        400:
          description: page number does not exist
          content:
            application/json:
              schema:
                example:
                  error: The requested page number does not exist
  /queue/page/{page-number}/page-size/{page-size}:
    get:
      tags:
        - public
      description: receive a page of the queue with custom page size
      parameters:
        - in: path
          name: page-number
          schema:
            type: integer
            example: 2
          required: true
          description: Number of page
        - in: path
          name: page-size
          schema:
            type: integer
            example: 10
          required: true
          description: Size of page
      responses:
        200:
          description: data of the requested page
          content:
            application/json:
              schema:
                example:
                  numberOfPages: 12
                  page:
                    - numberInQueue: 0
                      song:
                        artist: Giveon
                        duration: 200
                        title: For Tonight
                    - numberInQueue: 1
                      song:
                        artist: The Kid LAROI & Justin Bieber
                        duration: 69
                        title: Stay
                    - numberInQueue: 2
                      song:
                        artist: Lil Nas X & Jack Harlow
                        duration: 157
                        title: Industry Baby
        400:
          description: page number does not exist
          content:
            application/json:
              schema:
                example:
                  error: The requested page number does not exist
  /queue/now-playing:
    get:
      tags:
        - public
      description: receive the song that is currently playing and metadata of it
      responses:
        200:
          description: data of the currently playing song and its metadata
          content:
            application/json:
              schema:
                example:
                  isPlaying: True
                  time: 61
                  stamp: 1693508721172
                  song:
                    artist: The Kid LAROI & Justin Bieber
                    title: Stay
                    duration: 60
        400:
          description: no song currently playing
          content:
            application/json:
              schema:
                example:
                  error: No song currently playing
  /vote-skip/status:
    get:
      tags:
        - auth
      description: receives the status of the vote skip for the playing song
      responses:
        200:
          description: vote skip data
          content:
            application/json:
              schema:
                example:
                  hasVoted: True
                  received: 1
                  required: 5
        400:
          description: no active vote skip
          content:
            application/json:
              schema:
                example:
                  error: No active vote skip
  /vote-skip/vote:
    get:
      tags:
        - auth
      description: requests vote for the current vote skip
      responses:
        200:
          description: vote skip data
          content:
            application/json:
              schema:
                example:
                  hasVoted: True
                  received: 1
                  required: 5
        400:
          description: no active vote skip
          content:
            application/json:
              schema:
                example:
                  error: No active vote skip
  /vote-skip/withdraw:
    get:
      tags:
        - auth
      description: withdraws the vote for the current vote skip
      responses:
        200:
          description: vote skip data
          content:
            application/json:
              schema:
                example:
                  hasVoted: True
                  received: 1
                  required: 5
        400:
          description: no active vote skip
          content:
            application/json:
              schema:
                example:
                  error: No active vote skip